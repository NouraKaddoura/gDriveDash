{"version":3,"sources":["components/FileUpload.js","components/Graphs/JobRoleBreakdown.js","components/Graphs/WeeklyUse.js","components/Graphs/LargeFileSharing.js","components/Graphs/PrimaryCapability.js","components/Graphs/Productivity.js","components/Graphs/TotalUsers.js","components/Graphs/Devices.js","components/Sidebar.js","components/Graphs/TopDevice.js","components/Graphs/ProductivityAverage.js","components/Content.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["FileUpload","handleFileChange","event","a","file","fileInput","current","files","rows","readXlsxFile","console","log","answers","map","r","timestamp","emailAddress","role","devices","primaryDevice","largeFileSharing","usability","productivity","primaryCapability","weeklyUse","concernsComments","impactComments","additonalComments","splice","props","onFileUpload","React","createRef","Button","id","variant","component","color","type","onChange","this","ref","style","display","Component","JobRoleBreakdown","renderChart","tableData","length","roles","t","data","label","value","filter","o","Pie","WeeklyUse","getUse","weeklyUseOptions","className","renderLegend","Doughnut","height","LargeFileSharing","getTopFileType","fileNames","f","split","flat","fileCollections","topFileType","topFileCount","labels","datasets","fillColor","Bar","PrimaryCapability","getCapability","capabilityNames","c","TotalUsers","getUsers","displayUsers","users","Devices","d","Radar","Sidebar","renderSidebar","ProductivityAverage","getProductivity","productivitySum","forEach","class","paddingLeft","initialRating","readonly","Content","setState","state","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.b7cab3cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport readXlsxFile from 'read-excel-file'\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport { positions } from '@material-ui/system';\n\nimport './FileUpload.css'\n\n\nclass FileUpload extends Component {\n  constructor () {\n    super ()\n    this.fileInput = React.createRef()\n  }\n\n  handleFileChange = async (event) => {\n    const file = this.fileInput.current.files[0]\n    // readXlsxFile(file)\n    //   .then((rows) => {\n    //     console.log(rows)\n    //   })\n    //   .catch((err) => {\n    //     console.log('somehing messed up')\n    //   })\n    let rows = []\n    try {\n      rows = await readXlsxFile(file)\n    } catch (err) {\n      console.log('error:', err)\n    }\n\n\n    const answers = rows.map(r => {\n      return {\n        timestamp: r[0],\n        emailAddress: r[1],\n        role: r[2],\n        devices: r[3],\n        primaryDevice: r[4],\n        largeFileSharing: r[5],\n        usability: r[6],\n        productivity:  r[7],\n        primaryCapability: r[8],\n        weeklyUse: r[9],\n        concernsComments: r[10],\n        impactComments: r[11],\n        additonalComments:r[12]\n      }\n    })\n\n    answers.splice(0, 1)\n\n    this.props.onFileUpload(answers)\n\n\n    // 0: \"Timestamp\"\n    // 1: \"Email Address\"\n    // 2: \"Which best fits your current job role?\"\n    // 3: \"Check all the devices you use to access Google Drive\"\n    // 4: \"What is your primary device when accessing Google Drive?\"\n    // 5: \"How do you currently share large files with people outside of Boeing?\"\n    // 6: \"How would you rate the usability of Google Drive?\"\n    // 7: \"As an individual, I can become more productive and collaborative with this tool.\"\n    // 8: \"What capability of Google Drive do you primarily use? Check all that apply\"\n    // 9: \"How often are you using Google Drive per week?\"\n    // 10: \"Do you have any concerns with using Google Drive at Boeing?\"\n    // 11: \"How will using Google Drive impact how you do your job at Boeing?\"\n    // 12: \"Any additional comments? If you checked 'Other' above, use this space to expand.\"\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Button id=\"uploadbtn\" variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          >\n          Upload File\n          <input\n            type='file'\n            onChange={this.handleFileChange}\n            ref={this.fileInput}\n            style={{ display: \"none\" }}\n          />\n        </Button>\n\n      </div>\n    )\n  }\n}\n\n\nexport default FileUpload\n\n\n// https://www.npmjs.com/package/read-excel-file\n","import React, { Component } from 'react';\nimport Chart from 'react-chartjs'\n\nclass JobRoleBreakdown extends Component {\n\nrenderChart = () => {\n  const tableData = this.props.tableData\n  if (tableData.length < 1) return ''\n\n  const roles = tableData.map(t => {\n    return t.role\n  })\n\n  const data =[\n    {\n      label: 'Executive',\n      value: roles.filter(o => o === 'Executive').length,\n      color: '#6290C8'\n    },\n    {\n      label: 'Manager',\n      value: roles.filter(o => o === 'Manager').length,\n      color: '#1768AC'\n    },\n    {\n      label: 'Project/Program Manager',\n      value: roles.filter(o => o === 'Project/Program Manager').length,\n      color: '#06BEE1'\n    },\n    {\n      label: 'Technologist(IT, Developer, etc)',\n      value: roles.filter(o => o === 'Technologist(IT, Developer, etc)').length,\n      color: '#1768AC'\n    },\n    {\n      label: 'Communications',\n      value: roles.filter(o => o === 'Communications').length,\n      color: '#06BEE1'\n    },\n    {\n      label: 'Supplier Management',\n      value: roles.filter(o => o === 'Supplier Management').length,\n      color: '#06BEE1'\n    },\n    {\n      label: 'Manufacturing',\n      value: roles.filter(o => o === 'Manufacturing').length,\n      color: '#1768AC'\n    },\n    {\n      label: 'Engineering',\n      value: roles.filter(o => o === 'Engineering').length,\n      color: '#6290C8'\n    }\n  ]\n  const chart = <Chart.Pie data={data} />\n\n  return chart\n}\n  render() {\n    return (\n      <div>\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default JobRoleBreakdown;\n","import React, { Component } from 'react';\nimport Chart from 'react-chartjs'\n\nclass WeeklyUse extends Component {\n\n  getUse = () => {\n    const tableData = this.props.tableData\n    const use = tableData.map(t => {\n      return t.weeklyUse\n    })\n    return use\n  }\n\n  renderChart = () =>{\n    const weeklyUseOptions = this.getUse()\n\n    if (weeklyUseOptions.length < 1) return ''\n\n    const data = [\n      {\n        label: '1-2',\n        value: weeklyUseOptions.filter(o => o === '1-2').length,\n        color: '#6290C8'\n      },\n      {\n        label: '3-5',\n        value: weeklyUseOptions.filter(o => o === '3-5').length,\n        color: '#1768AC'\n      },\n      {\n        label: '6+',\n        value: weeklyUseOptions.filter(o => o === '6+').length,\n        color: '#06BEE1'\n      },\n    ]\n\n    const chart = (\n      <div className='chart'>\n        <h3 className='chartTitle'>How often per week?</h3>\n        {this.renderLegend()}\n        <Chart.Doughnut data={data} height={200}/>\n      </div>\n    )\n\n    return chart\n }\n\n renderLegend = () => {\n  const legendElement = (\n  <ul className='legend'>\n    <li>\n      <span className='legendColor legendOne'></span>\n      <span className='legendLabel'>1-2</span>\n    </li>\n    <li>\n      <span className='legendColor legendTwo'></span>\n      <span className='legendLabel'>3-5</span>\n    </li>\n    <li>\n      <span className='legendColor legendThree'></span>\n      <span className='legendLabel'>6+</span>\n    </li>\n  </ul>\n  )\n  return legendElement\n }\n\n  render() {\n    return (\n      <div className='WeeklyUse'>\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default WeeklyUse\n  // { this.renderChart() }\n","import React, { Component } from 'react';\nimport Chart from 'react-chartjs'\n\n// what are you using to share files: largeFileSharingM\nclass LargeFileSharing extends Component {\n\n  getTopFileType = () => {\n    const tableData = this.props.tableData\n    const files = tableData.map(t => {\n      return t.largeFileSharing\n    })\n\n    const parsedFiles = files.map(f => {\n      return f.split(', ')\n    })\n\n    const fileNames = parsedFiles.flat()\n\n    const fileCollections = {\n      'Message Courier': fileNames.filter(f => f === 'Message Courier'),\n      'USB': fileNames.filter(f => f === 'USB'),\n      'FTP': fileNames.filter(f => f === 'FTP'),\n      'MyBriefcase': fileNames.filter(f => f === 'MyBriefcase'),\n      'Comply365': fileNames.filter(f => f === 'Comply365'),\n      'Navigon': fileNames.filter(f => f === 'Navigon'),\n      'Other (Please provide detail at the end of the survey)': fileNames.filter(f => f === 'Other (Please provide detail at the end of the survey)')\n    }\n\n    let topFileType = null\n    let topFileCount = 0\n    for (const file in fileCollections) {\n      if (topFileType === null) {\n        topFileCount = fileCollections[file].length\n        topFileType = file\n      }\n      else if (fileCollections[file].length > topFileCount) {\n        topFileType = file\n        topFileCount = fileCollections[file].length\n      }\n    }\n\n    return topFileType\n  }\n\n  renderChart = () => {\n    const tableData = this.props.tableData\n\n    if (tableData < 1) return ''\n\n    const files = tableData.map(t => {\n      return t.largeFileSharing\n    })\n\n    const parsedFiles = files.map(f => {\n      return f.split(', ')\n    })\n    const fileNames = parsedFiles.flat()\n\n    const data = {\n      labels: ['Message Courier', 'USB', 'FTP', 'MyBriefcase', 'Comply365', 'Navigon', 'Other'],\n      datasets: [\n        {\n          label: 'File Sharing',\n          fillColor: '#6290C8',\n          data: [\n            fileNames.filter(o => o === 'Message Courier').length,\n            fileNames.filter(o => o === 'USB').length,\n            fileNames.filter(o => o === 'FTP').length,\n            fileNames.filter(o => o === 'MyBriefcase').length,\n            fileNames.filter(o => o === 'Comply365').length,\n            fileNames.filter(o => o === 'Navigon').length,\n            fileNames.filter(o => o === 'Other (Please provide detail at the end of the survey)').length,\n          ]\n        }\n      ]\n    }\n\n    const chart = <Chart.Bar data={data} />\n    return chart\n  }\n\n\n  render() {\n    return (\n      <div className='LargeFileSharing'>\n        <div>{this.getTopFileType()}</div>\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default LargeFileSharing;\n","import React, { Component } from 'react';\nimport Chart from 'react-chartjs'\n\nclass PrimaryCapability extends Component {\n\n  getCapability = () => {\n    const tableData = this.props.tableData\n    const capabilities = tableData.map(t => {\n      return t.primaryCapability\n\n    })\n    return capabilities\n\n  }\n\n  renderChart = () => {\n    const tableData = this.props.tableData\n\n    if (tableData.length < 1) return ''\n\n    const capabilities = tableData.map(t => {\n      return t.primaryCapability\n    })\n\n    const parsedCapabilities = capabilities.map(c => {\n      return c.split(', ')\n    })\n    const capabilityNames = parsedCapabilities.flat()\n\n    const data = {\n      labels: ['Docs', 'Sheets', 'Slides', 'Forms', 'File Sharing'],\n      datasets: [\n        {\n          label: 'Capabilities',\n          fillColor: '#6290C8',\n          data: [\n            capabilityNames.filter(c => c === 'Docs').length,\n            capabilityNames.filter(c => c === 'Sheets').length,\n            capabilityNames.filter(c => c === 'Slides').length,\n            capabilityNames.filter(c => c === 'Forms').length,\n            capabilityNames.filter(o => o === 'File Sharing').length\n          ]\n        }\n      ]\n    }\n\n    const chart = <Chart.Bar data={data} />\n    return chart\n  }\n\n\n  render() {\n    return (\n      <div>\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default PrimaryCapability;\n","import React, { Component } from 'react';\n\n//Make a weighted average in stars\nclass Productivity extends Component {\n\n  getProductivity = () => {\n    const tableData = this.props.tableData\n    const productivities = tableData.map(t => {\n      return t.productivity\n\n    })\n \n    return productivities\n\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        {this.getProductivity()}\n      </div>\n    )\n  }\n}\n\nexport default Productivity;\n\n//average\n","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\n\nclass TotalUsers extends Component {\n\n  getUsers = () => {\n    const tableData = this.props.tableData\n    const users = tableData.length\n    return users\n  }\n\n  displayUsers = () => {\n    const users = this.getUsers()\n    console.log(users)\n    if (users.length < 1) return ''\n    const userDisplay = (\n      <div>\n        <h3 className=\"chartTitle\">Total Users Surveyed</h3>\n        <h1 className=\"userstotal\">{this.getUsers()}</h1>\n      </div>\n    )\n    return userDisplay\n  }\n\n\n  render() {\n\n    return (\n      <div className='TotalUsers'>\n        {this.displayUsers()}\n      </div>\n    )\n  }\n}\n\nexport default TotalUsers;\n","import React, { Component } from 'react';\nimport Chart from 'react-chartjs'\n\nclass Devices extends Component {\n\n  renderChart = () => {\n    const tableData = this.props.tableData\n    if (tableData.length < 1) return ''\n\n    const devicesNames = tableData.map(t => {\n      return t.devices\n    })\n\n    const parsedDevices = devicesNames.map(d => {\n      return d.split(', ')\n    })\n    const devices = parsedDevices.flat()\n\n    const data = {\n      labels: ['Laptop (PC)', 'Laptop (Mac)', 'Mobile Device (Android)', 'Mobile Device (IPhone)', 'Tablet', 'Other'],\n      datasets: [\n        {\n          label: 'Devices Used',\n          fillColor: '#06BEE1',\n          data: [\n            devices.filter(o => o === 'Laptop (PC)').length,\n            devices.filter(o => o === 'Laptop (Mac)').length,\n            devices.filter(o => o === 'Mobile Device (Android)').length,\n            devices.filter(o => o === 'Mobile Device (IPhone)').length,\n            devices.filter(o => o === 'Tablet').length,\n            devices.filter(o => o === 'Other (Please provide detail at the end of the survey)').length,\n          ]\n        }\n      ]\n    }\n\n    const chart = <Chart.Radar data={data} />\n    return chart\n  }\n\n  render() {\n    return (\n      <div className='Devices'>\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default Devices;\n","import React, { Component } from 'react'\nexport default class Sidebar extends Component {\n  renderSidebar = () => {\n    return <div className=\"sidebar\">\n      <div className=\"sidebar-link\">Logo</div>\n      <div className=\"sidebar-link\">Home</div>\n      <div className=\"sidebar-link\">GDrive FAQ</div>\n      <div className=\"sidebar-link\">Comments</div>\n    </div>\n  }\n  render() {\n    return <div className=\"sidebar-container\">\n      {this.renderSidebar()}\n    </div>\n  }\n}\n","import React, { Component } from 'react';\n\nclass TopDevice extends Component {\n\n  getTopDevice = () => {\n   const tableData = this.props.tableData\n   const devicesNames = tableData.map(t => {\n     return t.primaryDevice\n   })\n\n   const deviceCollections = {\n    'Laptop (PC)': devicesNames.filter(d => d === 'Laptop (PC)'),\n    'Laptop (Mac)': devicesNames.filter(d => d === 'Laptop (Mac)'),\n    'Mobile Device (Android)': devicesNames.filter(d => d === 'Mobile Device (Android)'),\n    'Mobile Device (iPhone)': devicesNames.filter(d => d === 'Mobile Device (iPhone)') ,\n    'Tablet': devicesNames.filter(d => d === 'Tablet')\n   }\n\n   let topDeviceName = null\n   let topDeviceCount = 0\n   for (const device in deviceCollections) {\n     if (topDeviceName === null){\n      topDeviceCount = deviceCollections[device].length\n      topDeviceName = device\n     }\n     else if(deviceCollections[device].length > topDeviceCount) {\n      topDeviceName = device\n      topDeviceCount = deviceCollections[device].length\n     }\n   }\n\n   return topDeviceName\n  }\n  render() {\n   return (\n     <div>\n       {this.getTopDevice()}\n     </div>\n   )\n }\n}\n\nexport default TopDevice;\n","import React, { Component } from 'react'\n\n\n//Make a weighted average in stars\nimport Rating from 'react-rating'\nimport { blue } from '@material-ui/core/colors'\nclass ProductivityAverage extends Component {\n\n  getProductivity = () => {\n    const tableData = this.props.tableData\n    let productivitySum = 0\n\n    tableData.forEach(t => {\n      productivitySum = productivitySum + t.productivity\n    });\n\n    const productivity =productivitySum / tableData.length\n\n    console.log(tableData)\n\n    return productivity\n    //make it into an array?\n    //Average the numbers in the array\n            //function average(nums) {\n            // return nums.reduce((a, b) => (a + b)) / nums.length;\n            //}\n\n    //function productArray() {\n\n    //  productivities.split('')\n\n    //}\n    //insert that into a variable to display the stars\n  }\n\n//{this.getProductivity()}\n\n  render() {\n    return (\n      <div class=\"rating\">\n        <h3 style={{ paddingLeft: 10 }}>Productivity & Collaboration Rating Average</h3><Rating initialRating={this.getProductivity()} readonly\n\n        />\n      </div>\n    )\n  }\n}\n\nexport default ProductivityAverage;\n\n//average\n//Usability Rating give the usability a numberic scale from the text\n//function average(nums) {\n // return nums.reduce((a, b) => (a + b)) / nums.length;\n //}\n\n //https://www.npmjs.com/package/react-rating\n","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n//https://medium.com/@luqman.qureshi/create-animated-sidebar-component-in-react-with-react-transition-group-7956ed575c00\nimport TopDevice from './Graphs/TopDevice';\nimport WeeklyUse from './Graphs/WeeklyUse'\nimport LargeFileSharing from './Graphs/LargeFileSharing'\nimport Devices from './Graphs/Devices'\nimport JobRoleBreakdown from './Graphs/JobRoleBreakdown'\nimport PrimaryCapability from './Graphs/PrimaryCapability.js'\nimport './Graphs/styles.css'\nimport FileUpload from '../components/FileUpload';\nimport ProductivityAverage from './Graphs/ProductivityAverage'\nimport TotalUsers from './Graphs/TotalUsers';\n\nimport './Content.css'\n//import { Grid, Row, Col } from 'react-flexbox-grid';\n\n// src/components/Content.js\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n\nclass Content extends Component {\n  constructor() {\n    super()\n    this.state = {\n      tableData: []\n    }\n  }\n\n\n  onFileUpload = (tableData) => {\n    this.setState({\n      tableData: tableData\n    })\n  }\n\n  render () {\n    // const classes = useStyles();\n    //make content a flexbox\n    return (\n      <div className=\"content\">\n\n\n\n\n        <div className=\"firstrow graphRow\">\n          <WeeklyUse tableData={this.state.tableData} />\n          <div className=\"usabilityCollab\">\n           <TotalUsers tableData={this.state.tableData}/>\n          <ProductivityAverage tableData={this.state.tableData} />\n          </div>\n        </div>\n\n        <div className=\"secondrow graphRow\">\n          <Devices tableData={this.state.tableData} />\n          <LargeFileSharing tableData={this.state.tableData} />\n        </div>\n\n\n\n        <div className=\"thirdrow graphRow\">\n          <PrimaryCapability tableData={this.state.tableData} />\n          <JobRoleBreakdown tableData={this.state.tableData} />\n        </div>\n        <div className=\"results\">\n\n        </div>\n\n        <div className='fileupload'>\n          <FileUpload onFileUpload={this.onFileUpload} tableData={this.state.tableData} />\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Content\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport FileUpload from './components/FileUpload'\nimport JobRoleBreakdown from './components/Graphs/JobRoleBreakdown'\nimport WeeklyUse from './components/Graphs/WeeklyUse'\nimport LargeFileSharing from './components/Graphs/LargeFileSharing'\nimport Productivity from './components/Graphs/Productivity'\nimport PrimaryCapability from './components/Graphs/PrimaryCapability'\nimport TotalUsers from './components/Graphs/TotalUsers'\nimport Devices from './components/Graphs/Devices'\nimport Sidebar from './components/Sidebar'\nimport Content from './components/Content'\nimport ProductivityAverage from './components/Graphs/ProductivityAverage'\nimport TopDevice from './components/Graphs/TopDevice'\nimport { positions } from '@material-ui/system';\n\n\nclass App extends Component {\n  onFileUpload = (tableData) => {\n    this.setState({\n      tableData: tableData\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Sidebar />\n        <Content />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}